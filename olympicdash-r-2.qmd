---
title: "Olympic Games"
format: 
  dashboard:
    orientation: columns
    nav-buttons: [github]
    github: https://github.com/posit-conf-2024/olympicdash
from: markdown+emoji
logo: images/olympics-logo.svg
---

```{r}
#| label: load-packages
#| message: false
library(tidyverse)
library(gt)
```

```{r}
#| label: load-data
#| message: false
olympics_full <- read_csv("data/olympics.csv")
```

# :sun_with_face: Summer Olympics

```{r}
#| label: prep-data-summer
olympicsSummer <- olympics_full |>
  filter(
    season == "Summer",
    !is.na(medal)
  ) |>
  separate_wider_delim(cols = team, names = c("team", "suffix"), delim = "-", too_many = "merge", too_few = "align_start") |>
  select(-suffix) |>
  mutate(medal = fct_relevel(medal, "Bronze", "Silver", "Gold"))
```

## Column {width="65%"}

### Row {height="60%"}

```{r}
#| title: Medals by sport
#| fig-width: 10
olympicsSummer |>
  mutate(
    sport = fct_lump_n(sport, n = 15),
    sport = fct_infreq(sport),
    sport = fct_rev(sport),
    sport = fct_relevel(sport, "Other", after = 0)
  ) |>
  ggplot(aes(y = sport, fill = medal)) +
  geom_bar() +
  guides(fill = guide_legend(reverse = TRUE)) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Medal"
  ) +
  theme_minimal() +
  theme(
    legend.position = c(0.9, 0.2),
    legend.direction = "horizontal",
    legend.background = element_rect(fill = "white", color = "gray")
  )
```

### Row {height="40%"}

::: {.card title="Medals by year"}
Due to World War II, no olympic games were held in 1940 and 1944.

```{r}
# #| title: Medals by year
#| fig-asp: 0.3
#| fig-width: 10
olympicsSummer |>
  count(year, medal) |>
  ggplot(aes(x = year, y = n, color = medal)) +
  geom_point(size = 0.5) +
  geom_line() +
  guides(color = guide_legend(reverse = TRUE)) +
  scale_x_continuous(breaks = seq(1896, 2020, 8)) +
  labs(
    x = "Year",
    y = NULL,
    color = "Medal"
  ) +
  theme_minimal() +
  theme(
    legend.position = c(0.9, 0.2),
    legend.direction = "horizontal",
    legend.background = element_rect(fill = "white", color = "gray")
  )
```
:::

## Column {width="35%"}

### Value boxes {height="25%"}

```{r}
#| label: calculate-summer-values
summer_most_golds <- olympicsSummer |>
  filter(medal == "Gold") |>
  count(team, sort = TRUE) |>
  slice_head(n = 1)

summer_most_silvers <- olympicsSummer |>
  filter(medal == "Silver") |>
  count(team, sort = TRUE) |>
  slice_head(n = 1)

summer_most_bronzes <- olympicsSummer |>
  filter(medal == "Bronze") |>
  count(team, sort = TRUE) |>
  slice_head(n = 1)

lowest_mileage_cty <- mpg |>
  filter(cty == min(cty)) |>
  distinct(cty) |>
  pull(cty)

highest_mileage_cty <- mpg |>
  filter(cty == max(cty)) |>
  distinct(cty) |>
  pull(cty)
  
rounded_mean_city_mileage <- mpg |>
  summarize(round(mean(cty), 2)) |>
  pull()
```

<!-- ```{r}
#| content: valuebox
#| title: "Most Gold"
#| icon: award-fill
#| color: "#FFD700"
list(
  value = paste(lowest_mileage_cty, "mpg")
)
```

```{r}
#| content: valuebox
#| title: "Most Silver"
list(
  icon = "award-fill",
  color = "#C0C0C0",
  value = paste(highest_mileage_cty, "mpg")
)
```
-->

::: {.valuebox icon="award-fill" color="#FFD700"}
Most golds:

`{r} summer_most_golds$n`

`{r} as.character(summer_most_golds$team)`
:::

::: {.valuebox icon="award-fill" color="#C0C0C0"}
Most silvers:

`{r} summer_most_silvers$n`

`{r} as.character(summer_most_silvers$team)`
:::

::: {.valuebox icon="award-fill" color="#CD7F32"}
Most bronzes:

`{r} summer_most_bronzes$n`

`{r} as.character(summer_most_bronzes$team)`
:::

### Data table {height="75%" .tabset}

::: {.card title="Top 30 Total Medals"}

Top 30 total medals in descending order

```{r}
## | title: Top 30 Total Medals
olympicsSummer |>
  count(team, medal) |>
  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>
  mutate(Total = Bronze + Gold + Silver) |>
  arrange(desc(Total), team) |>
  slice_head(n=30) |>
  select(Team = team, Gold, Silver, Bronze) |>
  gt() |>
  data_color(
    method = "numeric", 
    palette = "nord::aurora"
  )
```
:::

::: {.card title="Bottom 30 Total Medals"}

Bottom 30 total medals in ascending order

```{r}
## | title: Bottom 30 Total Medals
olympicsSummer |>
  count(team, medal) |>
  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>
  mutate(Total = Bronze + Gold + Silver) |>
  arrange(desc(Total), team) |>
  slice_tail(n=30) |>
  select(Team = team, Gold, Silver, Bronze) |>
  gt() |>
  data_color(
    method = "numeric", 
    palette = "nord::aurora"
  )
```
:::

# :snowflake: Winter Olympics

```{r}
#| label: prep-data-winter
olympicsWinter <- olympics_full |>
  filter(
    season == "Winter",
    !is.na(medal)
  ) |>
  separate_wider_delim(cols = team, names = c("team", "suffix"), delim = "-", too_many = "merge", too_few = "align_start") |>
  select(-suffix) |>
  mutate(medal = fct_relevel(medal, "Bronze", "Silver", "Gold"))
```

## Column {width="65%"}

### Row {height="60%"}

```{r}
#| title: Medals by sport
#| fig-width: 10
olympicsWinter |>
  mutate(
    sport = fct_lump_n(sport, n = 15),
    sport = fct_infreq(sport),
    sport = fct_rev(sport),
    sport = fct_relevel(sport, "Other", after = 0)
  ) |>
  ggplot(aes(y = sport, fill = medal)) +
  geom_bar() +
  guides(fill = guide_legend(reverse = TRUE)) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Medal"
  ) +
  theme_minimal() +
  theme(
    legend.position = c(0.9, 0.2),
    legend.direction = "horizontal",
    legend.background = element_rect(fill = "white", color = "gray")
  )
```

### Row {height="40%"}

::: {.card title="Medals by year"}
Due to World War II, no olympic games were held in 1940 and 1944.

```{r}
# #| title: Medals by year
#| fig-asp: 0.3
#| fig-width: 10
olympicsWinter |>
  count(year, medal) |>
  ggplot(aes(x = year, y = n, color = medal)) +
  geom_point(size = 0.5) +
  geom_line() +
  guides(color = guide_legend(reverse = TRUE)) +
  scale_x_continuous(breaks = seq(1896, 2020, 8)) +
  labs(
    x = "Year",
    y = NULL,
    color = "Medal"
  ) +
  theme_minimal() +
  theme(
    legend.position = c(0.9, 0.2),
    legend.direction = "horizontal",
    legend.background = element_rect(fill = "white", color = "gray")
  )
```
:::

## Column {width="35%"}

### Value boxes {height="25%"}

```{r}
#| label: calculate-winter-values
winter_most_golds <- olympicsWinter |>
  filter(medal == "Gold") |>
  count(team, sort = TRUE) |>
  slice_head(n = 1)

winter_most_silvers <- olympicsWinter |>
  filter(medal == "Silver") |>
  count(team, sort = TRUE) |>
  slice_head(n = 1)

winter_most_bronzes <- olympicsWinter |>
  filter(medal == "Bronze") |>
  count(team, sort = TRUE) |>
  slice_head(n = 1)
```

::: {.valuebox icon="award-fill" color="#FFD700"}
Most golds:

`{r} winter_most_golds$n`

`{r} as.character(winter_most_golds$team)`
:::

::: {.valuebox icon="award-fill" color="#C0C0C0"}
Most silvers:

`{r} winter_most_silvers$n`

`{r} as.character(winter_most_silvers$team)`
:::

::: {.valuebox icon="award-fill" color="#CD7F32"}
Most bronzes:

`{r} winter_most_bronzes$n`

`{r} as.character(winter_most_bronzes$team)`
:::

### Data table {height="75%" .tabset}

::: {.card title="Top 30 Total Medals"}

Top 30 total medals in descending order

```{r}
## | title: Top 30 Total Medals
olympicsWinter |>
  count(team, medal) |>
  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>
  mutate(Total = Bronze + Gold + Silver) |>
  arrange(desc(Total), team) |>
  slice_head(n=30) |>
  select(Team = team, Gold, Silver, Bronze) |>
  gt() |>
  data_color(
    method = "numeric", 
    palette = "nord::aurora"
  )
```
:::

::: {.card title="Bottom 30 Total Medals"}

Bottom 30 total medals in ascending order

```{r}
## | title: Bottom 30 Total Medals
olympicsWinter |>
  count(team, medal) |>
  pivot_wider(names_from = medal, values_from = n, values_fill = 0) |>
  mutate(Total = Bronze + Gold + Silver) |>
  arrange(desc(Total), team) |>
  slice_tail(n=30) |>
  select(Team = team, Gold, Silver, Bronze) |>
  gt() |>
  data_color(
    method = "numeric", 
    palette = "nord::aurora"
  )
```
:::
